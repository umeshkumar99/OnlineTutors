@model OnlineTutorsEntities.usp_tblPageImagesGetbyID_Result

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout_admin.cshtml";
}
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/commanscript.js"></script>



@using (Html.BeginForm("Edit", "PageImages", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row" style="margin-top:50px;">
        <h2>Edit Page Images</h2>
    </div>
    <div class="col-md-6 col-lg-6 col-xs-12">
        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                
                    @Html.HiddenFor(model => model.Imageid, new { htmlAttributes = new { @class = "form-control" } })
                  

                
                
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.PageName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.PageID, ViewBag.PageID as List<SelectListItem>, "Select Page")
                    
                    @Html.ValidationMessageFor(model => model.PageName, "", new { @class = "text-danger" })
                </div>
            </div>

    
            <div class="form-group">
                @Html.LabelFor(model => model.ImageURL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">

                    <input type="file" id="ImageURL" name="ImageURL" />
                    @Html.ValidationMessageFor(model => model.ImageURL, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    @{
                        if(Model.ImageURL!=null && Model.ImageURL !="")
                        {
                    <img id="imgImageURL" src="@Url.Content( Model.ImageURL)" class="img-responsive"  />
                        }
                        else
                        {
                            <img id="imgImageURL" src="" class="img-responsive" />
                        }
                    }
                </div>


            </div>





            <div class="form-group">
                @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>


    $(document).ready(function () {

        $("#ImageURL").change(function () {
            readURL(this, $('#imgImageURL'));
    });




    });
</script>

