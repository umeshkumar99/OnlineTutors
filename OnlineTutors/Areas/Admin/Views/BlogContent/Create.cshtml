@model OnlineTutorsEntities.usp_tblBlogContentGetID_Result

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout_admin.cshtml";
}
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container-fluid">

        <div class="row" style="margin-top:50px;">
            <h2>Create Page Content</h2>
        </div>
        <div class="row">
            @{
                if (ViewBag.error != null)
                {
                    <b>@ViewBag.error</b>
                }
            }
        </div>

        <div class="row">

            <div class="col-lg-6 col-md-6 col-xs-12">
                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="form-group">
                        @Html.LabelFor(model => model.PageName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("PageID")
                            @Html.ValidationMessageFor(model => model.PageName, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Keywords, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Keywords, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Keywords, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.KeywordDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.KeywordDesc, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.KeywordDesc, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Pageh1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Pageh1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Pageh1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BlogContent, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.BlogContent, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BlogContent, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.displayorder, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.displayorder, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.displayorder, "", new { @class = "text-danger" })
                        </div>



                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
                }
       
           
        
        
        
         <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        <script type="text/javascript" src="//tinymce.cachefly.net/4.0/tinymce.min.js"></script>
        <script type="text/javascript">
        tinymce.init({ selector: 'textarea', width: 500 });
        </script>